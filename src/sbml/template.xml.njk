<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sbml xmlns="http://www.sbml.org/sbml/level2/version4" xmlns:xhtml="http://www.w3.org/1999/xhtml" level="2" version="4">
  <model id="{{model.id}}" metaid="{{model.index}}" {% if model.title %}name="{{model.title}}"{% endif %}>
  {% if model.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{model.notes}}</html></notes>{% endif %}
  {%- set listOfCompartments = model.selectByClassName('Compartment') -%}
  {% if listOfCompartments|length > 0 %}
    <listOfCompartments>
    {%- for record in listOfCompartments %}
      <compartment
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        constant="{{ record.assignments.start_.className==='Const' }}"
        {% if record.assignments.start_.num!==undefined -%}size="{{record.assignments.start_.num}}"{%- endif %}
        {% if record.units!==undefined -%}units="{{ record.unitsHash }}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </compartment>
    {%- endfor %}
    </listOfCompartments>
  {% endif %}
  {%- set listOfSpecies = model.selectByClassName('Species') -%}
  {% if listOfSpecies|length > 0 %}
    <listOfSpecies>
    {%- for record in listOfSpecies %}
      <species
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        hasOnlySubstanceUnits="{{record.isAmount===true}}"
        speciesType=""
        compartment="{{record.compartment}}"
        constant="{{ record.assignments.start_.className==='Const' }}"
        boundaryCondition="{{ record.boundary===true or record.assignments.ode_!==undefined }}"
        {% if record.assignments.start_.num!==undefined -%}initialConcentration="{{record.assignments.start_.num}}"{%- endif %}
        {% if record.units!==undefined -%}substanceUnits="{{record.unitsHash}}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </species>
    {%- endfor %}
    </listOfSpecies>
  {% endif %}
  {%- set listOfParameters = model.selectByClassName('Record') -%}
  {% if listOfParameters|length > 0 %}
    <listOfParameters>
    {%- for record in listOfParameters %}
      <parameter
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        constant="{{ record.assignments.start_.className==='Const' }}"
        {% if record.assignments.start_.num!==undefined -%}value="{{record.assignments.start_.num}}"{%- endif %}
        {% if record.units!==undefined -%}units="{{record.unitsHash}}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </parameter>
    {%- endfor %}
  </listOfParameters>
  {% endif %}
  {%- set listOfReactions = model.selectByClassName('Reaction') -%}
  {% if listOfReactions|length > 0 %}
    <listOfReactions>
    {%- for record in listOfReactions %}
      <reaction
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        reversible="{{ record.aux.reversible!=='false' }}"
        fast="{{ record.aux.fast==='true' }}"
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
        <listOfReactants>
          {% for actor in record.actors -%}
          {% if actor.stoichiometry<0 %}<speciesReference species="{{ actor.target }}" stoichiometry="{{ -actor.stoichiometry }}"/>{% endif %}
          {% endfor -%}
        </listOfReactants>
        <listOfProducts>
          {% for actor in record.actors -%}
          {% if actor.stoichiometry>0 %}<speciesReference species="{{ actor.target }}" stoichiometry="{{ actor.stoichiometry }}"/>{% endif %}
          {% endfor -%}
        </listOfProducts>
        <listOfModifiers>
          {% for effector in record.effectors -%}
          <modifierSpeciesReference species="{{ effector.target }}"/>
          {% endfor -%}
        </listOfModifiers>
        <kineticLaw>
          {{record.assignments.ode_.toCMathML}}
        </kineticLaw>
      </reaction>
    {%- endfor %}
  </listOfReactions>
  {% endif %}
  <listOfRules>
  {%- for record in model.getListOfRules() %}
    <assignmentRule
      variable="{{record.id}}"
      metaid="{{record.index}}.ode_"
      {% if record.title %}name="{{record.title}}"{% endif %}
      >
      {{record.assignments.ode_.toCMathML}}
    </assignmentRule>
  {%- endfor %}
  {%- for record in model.selectByClassName('Process') %}
    {%- for actor in record.actors %}
    <rateRule
      variable="{{actor.target}}"
      {% if record.title %}name="{{record.title}}"{% endif %}
      >
      <math xmlns="http://www.w3.org/1998/Math/MathML">
        <apply>
          <times/>
          <cn>{{actor.stoichiometry}}</cn>
          <ci>{{record.id}}</ci>
        </apply>
      </math>
    </rateRule>
    {%- endfor %}
  {%- endfor %}
  </listOfRules>
  {%- set listOfInitialAssignments = model.getListOfInitialAssignments() -%}
  {% if listOfInitialAssignments|length > 0 %}
    <listOfInitialAssignments>
    {%- for record in listOfInitialAssignments %}
      <initialAssignment
        symbol="{{record.id}}"
        metaid="{{record.index}}.start_"
        {% if record.title %}name="{{record.title}}"{% endif %}
        >
        {{record.assignments.start_.toCMathML}}
      </initialAssignment>
    {%- endfor %}
    </listOfInitialAssignments>
  {% endif %}
  {%- set listOfEvents = model.selectByClassName('Switcher') -%}
  {% if listOfEvents|length > 0 %}
    <listOfEvents>
      {%- for event in listOfEvents %}
      <event
        id="{{event.id}}" metaid="{{event.index}}"
        >
        <trigger>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <geq/>
              <ci>{{ event.condition }}</ci>
              <cn>0</cn>
            </apply>
          </math>
        </trigger>
        <listOfEventAssignments>
          {% for record in model.selectRecordsByScope(event.id) %}
          <eventAssignment
            variable="{{ record.id }}"
            metaid="{{record.index}}.{{event.id}}">
            {{ record.assignments[event.id].toCMathML }}
          </eventAssignment>
          {% endfor %}
        </listOfEventAssignments>
      </event>
      {%- endfor %}
    </listOfEvents>
  {% endif %}
  {%- set uniqueUnits = model.getUniqueUnits() -%}
  {% if uniqueUnits|length > 0 %}
    <listOfUnitDefinitions>
    {%- for record in uniqueUnits %}
      {{ record.getUnitDefinition() }}
    {%- endfor %}
  </listOfUnitDefinitions>
  {% endif %}
  </model>
</sbml>
