<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sbml xmlns="http://www.sbml.org/sbml/level2/version4" xmlns:xhtml="http://www.w3.org/1999/xhtml" level="2" version="4">
  <model id="{{_id}}" metaid="{{_id}}" {% if title %}name="{{title}}"{% endif %}>
  {% if _model_.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{_model_.notesHTML}}</html></notes>{% endif %}
  
  {%- set listOfCompartments = _model_.population.selectByClassName('Compartment') -%}
  {% if listOfCompartments|length > 0 %}
    <listOfCompartments>
    {%- for record in listOfCompartments %}
      <compartment
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        constant="false"
        {% if record.assignments.start_.num!==undefined -%}size="{{record.assignments.start_.num}}"{%- endif %}
        {% if record.units!==undefined -%}units="{{ record.unitsHash() }}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </compartment>
    {%- endfor %}
    </listOfCompartments>
  {% endif %}
 
  {%- set listOfSpecies = _model_.population.selectByClassName('Species') -%}
  {% if listOfSpecies|length > 0 %}
    <listOfSpecies>
    {%- for record in listOfSpecies %}
      <species
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        {#- speciesType="" #}
        compartment="{{record.compartment}}"
        constant="false"
        boundaryCondition="{{ record.boundary===true or record.implicitBoundary===true }}"
        hasOnlySubstanceUnits="{{record.isAmount===true}}"
        {% if record.assignments.start_.num!==undefined -%}
          {% if record.isAmount===true %}initialAmount{% else %}initialConcentration{% endif %}="{{record.assignments.start_.num}}"
        {%- endif %}
        {% if record.units!==undefined -%}substanceUnits="{{record.unitsHash(true)}}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </species>
    {%- endfor %}
    </listOfSpecies>
  {% endif %}
  
  {%- set listOfParameters = _model_.population.selectByClassName('Record') -%}
  {%- set listOfProcesses = _model_.population.selectByClassName('Process') -%}
  {%- set listOfConstants = _model_.population.selectByClassName('Const') -%}
  {% if listOfParameters|length + listOfConstants|length + listOfProcesses|length > 0 %}
    <listOfParameters>
    {%- for record in listOfParameters.concat(listOfProcesses) %}
      <parameter
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        constant="false"
        {% if record.assignments.start_.num!==undefined -%}value="{{record.assignments.start_.num}}"{%- endif %}
        {% if record.units!==undefined -%}units="{{record.unitsHash()}}"{%- endif %}
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
      </parameter>
    {%- endfor %}
    {%- for con in listOfConstants %}
      <parameter
        id="{{con.id}}"
        {% if record.title %}name="{{con.title}}"{% endif %}
        constant="true"
        {% if con.num!==undefined -%}value="{{con.num}}"{%- endif %}
        {% if con.units!==undefined -%}units="{{con.unitsHash()}}"{%- endif %}
        metaid="{{con.index}}"
        >
        {% if con.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{con.notesHTML}}</html></notes>{% endif %}
      </parameter>
    {%- endfor %}
  </listOfParameters>
  {% endif %}

  {%- set listOfReactions = _model_.population.selectByClassName('Reaction') -%}
  {% if listOfReactions|length > 0 %}
    <listOfReactions>
    {%- for record in listOfReactions %}
      <reaction
        id="{{record.id}}"
        {% if record.title %}name="{{record.title}}"{% endif %}
        reversible="{{ record.aux.reversible!=='false' }}"
        fast="{{ record.aux.fast==='true' }}"
        metaid="{{record.index}}"
        >
        {% if record.notes %}<notes><html xmlns="http://www.w3.org/1999/xhtml">{{record.notesHTML}}</html></notes>{% endif %}
        <listOfReactants>
          {% for actor in record.actors -%}
          {% if actor.stoichiometry<0 %}<speciesReference species="{{ actor.target }}" stoichiometry="{{ -actor.stoichiometry }}"/>{% endif %}
          {% endfor -%}
        </listOfReactants>
        <listOfProducts>
          {% for actor in record.actors -%}
          {% if actor.stoichiometry>0 %}<speciesReference species="{{ actor.target }}" stoichiometry="{{ actor.stoichiometry }}"/>{% endif %}
          {% endfor -%}
        </listOfProducts>
        <listOfModifiers>
          {% for modifier in record.modifiers -%}
          <modifierSpeciesReference species="{{ modifier.target }}"/>
          {% endfor -%}
        </listOfModifiers>
        <kineticLaw>
          {{record.assignments.ode_.toCMathML()}}
        </kineticLaw>
      </reaction>
    {%- endfor %}
  </listOfReactions>
  {% endif %}

  {%- set listOfAssignmentRules = _model_.population|exclude2("assignments.ode_", undefined)|exclude2("className","Reaction") -%} {# all ode_ but not reactions #}
  {%- set listOfRateRules = _model_.population.selectByClassName('Record')|exclude2("boundary", true)|exclude2("implicitBoundary", true)|exclude2("backReferences.length", 0) -%}
  {% if listOfAssignmentRules|length+listOfRateRules|length > 0 %}
  <listOfRules>
  {%- for record in listOfAssignmentRules %}
    <assignmentRule
      variable="{{record.id}}"
      {% if record.title %}name="{{record.title}}"{% endif %}
      metaid="{{record.index}}::ode_"
      >
      {{record.assignments.ode_.toCMathML()}}
    </assignmentRule>
  {%- endfor %}

  {%- for record in listOfRateRules %}
    <rateRule
      variable="{{record.id}}"
      {% if record.title %}name="{{record.title}}"{% endif %}
      metaid="{{record.index}}::ode_"
      >
      <math xmlns="http://www.w3.org/1998/Math/MathML">
        <apply>
          <plus/>
          {% for ref in record.backReferences %}
          <apply>
            <times/>
            <cn>{{ ref.stoichiometry }}</cn>
            <ci>{{ ref.process }}</ci>
          </apply>
          {% endfor %}
        </apply>
      </math>
    </rateRule>
  {% endfor %}
  
  </listOfRules>
  {% endif %}
  
  {%- set listOfInitialAssignments = _model_.population|exclude2("assignments.start_", undefined)|filter2("assignments.start_.num", undefined) -%}
  {% if listOfInitialAssignments|length > 0 %}
    <listOfInitialAssignments>
    {%- for record in listOfInitialAssignments %}
      <initialAssignment
        symbol="{{record.id}}"
        metaid="{{record.index}}::start_"
        {% if record.title %}name="{{record.title}}"{% endif %}
        >
        {{record.assignments.start_.toCMathML()}}
      </initialAssignment>
    {%- endfor %}
    </listOfInitialAssignments>
  {% endif %}
  
  {%- set listOfTimeEvents = _model_.population.selectByClassName("TimeSwitcher") -%}
  {%- set listOfContinuousEvents = _model_.population.selectByClassName("ContinuousSwitcher") -%}
  {% if listOfTimeEvents|length + listOfContinuousEvents|length > 0 %}
    <listOfEvents>
      {%- for event in listOfTimeEvents %}
      <event
        id="{{event.id}}" metaid="{{event.index}}"
        >
        <trigger>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <geq/>
              <ci>t</ci>
              <cn>{{event.start}}</cn>
            </apply>
          </math>
        </trigger>
        <listOfEventAssignments>
          {% for record in _model_.population.selectRecordsByContext(event.id) %}
          <eventAssignment
            variable="{{ record.id }}"
            metaid="{{record.index}}::{{event.id}}">
            {{ record.assignments[event.id].toCMathML() }}
          </eventAssignment>
          {% endfor %}
        </listOfEventAssignments>
      </event>
      {%- endfor %}
      {%- for event in listOfContinuousEvents %}
      <event
        id="{{event.id}}" metaid="{{event.index}}"
        >
        <trigger>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <geq/>
              <ci>{{ event.condition }}</ci>
              <cn>0</cn>
            </apply>
          </math>
        </trigger>
        <listOfEventAssignments>
          {% for record in _model_.population.selectRecordsByContext(event.id) %}
          <eventAssignment
            variable="{{ record.id }}"
            metaid="{{record.index}}::{{event.id}}">
            {{ record.assignments[event.id].toCMathML() }}
          </eventAssignment>
          {% endfor %}
        </listOfEventAssignments>
      </event>
      {%- endfor %}
    </listOfEvents>
  {% endif %}
  
  {%- set listOfUnitDefinitions = _model_.population.getListOfUnitDefinitions() -%}
  {% if listOfUnitDefinitions|length > 0 %}
    <listOfUnitDefinitions>
    {%- for unitDefinition in listOfUnitDefinitions %}
      {{ unitDefinition }}
    {%- endfor %}
  </listOfUnitDefinitions>
  {% endif %}
  
  </model>
</sbml>
