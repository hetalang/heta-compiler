// This code was generated by Heta compiler, see https://hetalang.github.io
{#-
    this.exportStorage = new Map();
    // storage for UnitDef
    this.unitDefStorage = new Map();
    // storage of Namespaces
    this.namespaceStorage = new Map();
#}
{% for spaceId, namespace in namespaceStorage.entries() %}
{{ 'abstract ' if namespace.isAbstract }}namespace {{ spaceId }} begin
{%- for component in namespace.selectByClassName('Compartment') %}
  {{ '\'\'\'' + component.notes + '\'\'\'' if component.notes is defined }}
  {{ component.id -}}
  {{- ' @Compartment' -}}
  {{- ' \'' + component.title + '\'' if component.title is defined -}}
  {{- ' {' -}}
  {{- ' units: ' + component.units + ',' if component.units is defined }}
  {{- ' boundary: ' + component.boundary + ',' if component.boundary is defined }}
  {{- ' }' -}}
  {{- ' .= ' + component.assignments.start_ if component.assignments.start_ is defined -}}
  {{- ';' -}}
{%- endfor %}

{%- for component in namespace.selectByClassName('Species') -%}
  {{ '\'\'\'' + component.notes + '\'\'\'' if component.notes is defined }}
  {{ component.id -}}
  {{- ' @Species' -}}
  {{- ' \'' + component.title + '\'' if component.title is defined -}}
  {{- ' {' -}}
  {{- ' units: ' + component.units + ',' if component.units is defined }}
  {{- ' boundary: ' + component.boundary + ',' if component.boundary is defined }}
  {{- ' compartment: ' + component.compartment + ',' if component.compartment is defined }}
  {{- ' isAmount: ' + component.isAmount + ',' if component.isAmount is defined }}
  {{- ' }' -}}
  {{- ' .= ' + component.assignments.start_ if component.assignments.start_ is defined -}}
  {{- ';' -}}
{%- endfor %}
end
{% endfor %}