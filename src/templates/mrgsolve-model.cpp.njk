$PROB
# Model: `{{ population.spaceName }}`
  - Title: {{ population.spaceName }}
  - Notes: Generated automatically from platform with Heta compiler
  - Source: Heta compiler

# Demo
```{r,echo=TRUE}
  ev(amt=10) %>% mrgsim %>% plot
```

$SET end={{ method.timeRange[1]|default(120) }}, delta={{ method.dt|default(0.1) }}, hmax={{ method.dtmax|default(0.01) }}, hmin={{ method.dtmin|default(0) }}, rtol={{ method.reltol|default("1e-3") }}, atol={{ method.abstol|default("1e-6") }}

$PARAM @annotated
{%- for constant in population.selectByClassName("Const") %}
// @{{ constant.className }} '{{ constant.title }}'
{{ constant.id }} : {{ constant.num }} : {% if constant.units %}({{ constant.units }}){% endif %}
{%- endfor %}

$CMT @annotated
{%- for record in dynamics %}
// @{{ record.className }} '{{ record.title }}'
{% if record.className=="Species" and not record.isAmount -%}
{{ record.id }}_amt_ : as amount
{%- else -%}
{{ record.id }} : amount
{%- endif %}
{%- endfor %}

$GLOBAL
{%- for variable in dynamics|filter2("className", "Species")|exclude2("isAmount", true) %}
#define {{ variable.id }} ({{ variable.id }}_amt_ / {{ variable.compartment }})
{%- endfor %}

$PREAMBLE
{%- for record in start_ %}
{{ "//" if record.isDynamic }}double {{ record.id }} = {{ record.assignments.start_.toCString() }}; 
{%- endfor %}

$MAIN
{%- for variable in start_|filter2("isDynamic", true) %}
{{  variable.id }}{{ "_amt_" if (variable.className==="Species" and not variable.isAmount) }}_0 = ({{ variable.assignments.start_.toCString() }}){% if variable.className==="Species" and not variable.isAmount %} * {{ variable.compartment }}{% endif %}; 
{%- endfor %}

$ODE
{%- for record in ode_ %}
// @{{ record.className }} '{{ record.title }}'
{{ "double " if not record.assignments.start_ }}{{ record.id }} = {{  record.assignments.ode_.toCString() }};
{%- endfor %}
{% for variable in dynamics %}
dxdt_{{ variable.id }}{{ "_amt_" if variable.className==="Species" and not variable.isAmount }} =
{%- for item in variable.backReferences|exclude2('stoichiometry', undefined) %} {{ "+ " if not loop.first }}({{ item.stoichiometry }})*{{ item.process }}{% endfor %};
{%- endfor %}

$CAPTURE @annotated
{%- for record in output %}
{{ record.id }} : {{ record.title }} {% if record.units is defined %}({{ record.units }}){% endif %}
{%- endfor %}
