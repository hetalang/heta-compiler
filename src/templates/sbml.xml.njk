<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sbml
{%- block sbmlHeader %} 
  xmlns="http://www.sbml.org/sbml/level2/version4" 
  xmlns:xhtml="http://www.w3.org/1999/xhtml" 
  level="2" version="4"
{%- endblock %}
  >
  <model 
    id="{{ population.spaceName }}" 
    metaid="{{ population.spaceName }}"
    >
    {% if notes is defined %}
    <notes>
      <html xmlns="http://www.w3.org/1999/xhtml">
        {{ notesHTML }}
      </html>
    </notes>
  {%- endif %}
  
  {%- set listOfCompartments = population.selectByClassName('Compartment') -%}
  {% if listOfCompartments | length > 0 %}
    <listOfCompartments>
    {%- for record in listOfCompartments %}
      <compartment
        id="{{ record.id }}"
        {%- if record.title %}
        name="{{ record.title }}"
        {%- endif %}
        constant="false"
        {%- if record.assignments.start_.num is defined %}
        size="{{ record.assignments.start_.num }}"
        {%- endif %}
        {%- if record.units is defined %}
        units="{{ record.unitsHash() }}"
        {%- endif %}
        metaid="{{ record.index }}"
        >
        {%- if record.notes is defined %}
        <notes>
          <html xmlns="http://www.w3.org/1999/xhtml">
            {{ record.notesHTML }}
          </html>
        </notes>
        {%- endif %}
      </compartment>
    {%- endfor %}
    </listOfCompartments>
  {% endif %}
  
  {%- set listOfSpecies = population.selectByClassName('Species') -%}
  {% if listOfSpecies|length > 0 %}
    <listOfSpecies>
    {%- for record in listOfSpecies %}
      <species
        id="{{record.id}}"
        {%- if record.title is defined%}
        name="{{record.title}}"
        {%- endif %}
        {#- speciesType="" #}
        compartment="{{record.compartment}}"
        constant="false"
        boundaryCondition="{{ record.boundary===true or record.isRule===true }}"
        hasOnlySubstanceUnits="{{record.isAmount===true}}"
        {% if record.assignments.start_.num is defined -%}
          {% if record.isAmount===true %}initialAmount{% else %}initialConcentration{% endif %}="{{record.assignments.start_.num}}"
        {%- endif %}
        {%- if record.units is defined %}
        substanceUnits="{{record.unitsHash(true)}}"
        {%- endif %}
        metaid="{{record.index}}"
        >
        {%- if record.notes is defined %}
        <notes>
          <html xmlns="http://www.w3.org/1999/xhtml">
            {{ record.notesHTML }}
          </html>
        </notes>
      {%- endif %}
      </species>
    {%- endfor %}
    </listOfSpecies>
  {% endif %}
  
  {%- set listOfParameters = population.selectByClassName('Record') -%}
  {%- set listOfProcesses = population.selectByClassName('Process') -%}
  {%- set listOfConstants = population.selectByClassName('Const') -%}
  {% if listOfParameters|length + listOfConstants|length + listOfProcesses|length > 0 %}
    <listOfParameters>
    {%- for record in listOfParameters.concat(listOfProcesses) %}
      <parameter
        id="{{ record.id }}"
        {%- if record.title %}
        name="{{ record.title }}"
        {%- endif %}
        constant="false"
        {%- if record.assignments.start_.num is defined %}
        value="{{ record.assignments.start_.num }}"
        {%- endif %}
        {%- if record.units is defined %}
        units="{{ record.unitsHash() }}"
        {%- endif %}
        metaid="{{ record.index }}"
        >
        {%- if record.notes is defined %}
        <notes>
          <html xmlns="http://www.w3.org/1999/xhtml">
            {{ record.notesHTML }}
          </html>
        </notes>
        {%- endif %}
      </parameter>
    {%- endfor %}
    {%- for con in listOfConstants %}
      <parameter
        id="{{ con.id }}"
        {%- if record.title %}
        name="{{ con.title }}"
        {%- endif %}
        constant="true"
        {%- if con.num is defined %}
        value="{{ con.num }}"
        {%- endif %}
        {%- if con.units is defined %}
        units="{{ con.unitsHash() }}"
        {%- endif %}
        metaid="{{ con.index }}"
        >
        {%- if con.notes is defined %}
        <notes>
          <html xmlns="http://www.w3.org/1999/xhtml">
            {{ con.notesHTML }}
          </html>
        </notes>
        {%- endif %}
      </parameter>
      {%- endfor %}
    </listOfParameters>
  {% endif %}

  {%- set listOfReactions = population.selectByClassName('Reaction') -%}
  {% if listOfReactions | length > 0 %}
    <listOfReactions>
    {%- for record in listOfReactions %}
      <reaction
        id="{{ record.id }}"
        {%- if record.title is defined %}
        name="{{ record.title }}"
        {%- endif %}
        reversible="{{ record.aux.reversible !== false }}"
        fast="{{ record.aux.fast === 'true' }}"
        metaid="{{record.index}}"
        >
        {%- if record.notes is defined %}
        <notes>
          <html xmlns="http://www.w3.org/1999/xhtml">
            {{ record.notesHTML }}
          </html>
        </notes>
        {%- endif %}
        <listOfReactants>
          {%- for actor in record.actors %}
          {%- if actor.stoichiometry < 0 %}
          <speciesReference species="{{ actor.target }}" stoichiometry="{{ -actor.stoichiometry }}"/>
          {%- endif %}
          {%- endfor %}
        </listOfReactants>
        <listOfProducts>
          {%- for actor in record.actors %}
          {%- if actor.stoichiometry > 0 %}
          <speciesReference species="{{ actor.target }}" stoichiometry="{{ actor.stoichiometry }}"/>
          {%- endif %}
          {%- endfor %}
        </listOfProducts>
        <listOfModifiers>
          {%- for modifier in record.modifiers %}
          <modifierSpeciesReference species="{{ modifier.target }}"/>
          {%- endfor %}
        </listOfModifiers>
        <kineticLaw>
          {%- if record.assignments.ode_ is defined %}
          {{ record.assignments.ode_.toCMathML() }}
          {%- endif %}
        </kineticLaw>
      </reaction>
    {%- endfor %}
    </listOfReactions>
  {% endif %}

  {%- set listOfAssignmentRules = population.toArray()|exclude2("assignments.ode_", undefined)|exclude2("className","Reaction") -%} {# all ode_ but not reactions #}
  {%- set listOfRateRules = population.selectByClassName('Record')|exclude2("boundary", true)|exclude2("isRule", true)|exclude2("backReferences.length", 0) -%}
  {% if listOfAssignmentRules|length + listOfRateRules|length > 0 %}
  <listOfRules>
  {%- for record in listOfAssignmentRules %}
    <assignmentRule
      variable="{{record.id}}"
      metaid="{{record.index}}::ode_"
      >
      {{ record.assignments.ode_.toCMathML() }}
    </assignmentRule>
  {%- endfor %}

  {%- for record in listOfRateRules %}
    <rateRule
      variable="{{record.id}}"
      metaid="{{ record.index }}::ode_"
      >
      <math xmlns="http://www.w3.org/1998/Math/MathML">
        <apply>
          <plus/>
          {%- for ref in record.backReferences %}
          <apply>
            <times/>
            <cn>{{ ref.stoichiometry }}</cn>
            <ci>{{ ref.process }}</ci>
          </apply>
          {%- endfor %}
        </apply>
      </math>
    </rateRule>
  {% endfor %}
  
  </listOfRules>
  {% endif %}
  
  {%- set listOfInitialAssignments = population.toArray()|exclude2("assignments.start_", undefined)|filter2("assignments.start_.num", undefined) -%}
  {% if listOfInitialAssignments|length > 0 %}
    <listOfInitialAssignments>
    {%- for record in listOfInitialAssignments %}
      <initialAssignment
        symbol="{{ record.id }}"
        metaid="{{ record.index }}::start_"
        >
        {{ record.assignments.start_.toCMathML() }}
      </initialAssignment>
    {%- endfor %}
    </listOfInitialAssignments>
  {% endif %}
  
  {%- set listOfTimeEvents = population.selectByClassName("TimeSwitcher") -%}
  {%- set listOfCondEvents = population.selectByClassName("CSwitcher") -%}
  {% if listOfTimeEvents|length + listOfCondEvents|length > 0 %}
    <listOfEvents>
      {%- for event in listOfTimeEvents %}
      <event
        id="{{event.id}}"
        metaid="{{event.index}}"
        >
        <trigger>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <geq/>
              <ci>t</ci>
              {%- if event.start is defined %}
              <ci>{{ event.start }}</ci>
              {%- else %}
              <cn>{{ event.startObj.num }}</cn>
              {%- endif %}
            </apply>
          </math>
        </trigger>
        <listOfEventAssignments>
          {% for record in population.selectRecordsByContext(event.id) %}
          <eventAssignment
            variable="{{ record.id }}"
            metaid="{{record.index}}::{{event.id}}">
            {{ record.assignments[event.id].toCMathML() }}
          </eventAssignment>
          {% endfor %}
        </listOfEventAssignments>
      </event>
      {%- endfor %}
      {%- for event in listOfCondEvents %}
      <event
        id="{{event.id}}" metaid="{{event.index}}"
        >
        <trigger>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <geq/>
              <ci>{{ event.condition }}</ci>
              <cn>0</cn>
            </apply>
          </math>
        </trigger>
        <listOfEventAssignments>
          {% for record in population.selectRecordsByContext(event.id) %}
          <eventAssignment
            variable="{{ record.id }}"
            metaid="{{record.index}}::{{event.id}}">
            {{ record.assignments[event.id].toCMathML() }}
          </eventAssignment>
          {% endfor %}
        </listOfEventAssignments>
      </event>
      {%- endfor %}
    </listOfEvents>
  {% endif %}
  
  {%- set listOfUnitDefinitions = listOfUnitDefinitions %}
  {%- if listOfUnitDefinitions | length > 0 %}
<!-- UNIT DEFINITIONS -->
<listOfUnitDefinitions>
{%- for unitDefinition in listOfUnitDefinitions %}
  {{ unitDefinition }}
{%- endfor %}
</listOfUnitDefinitions>
  {%- endif %}
  
  </model>
</sbml>
