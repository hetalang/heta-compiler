/*
  testing #defineFunction action
*/

#defineFunction pow7 {
  arguments: [x],
  math: "pow(x, 7)"
};

#defineFunction f3 {
  arguments: [x1, x2, x3],
  math: sqrt(x1^2 + x2^2 + x3^2)
};

#defineFunction f4 {
  arguments: [],
  math: 15*2
};

// ref to defined function
#defineFunction f5 {
  arguments: [x,y],
  math: f4(x)^2
};

/*
// throws error
#defineFunction f6 {
};

// ref to wrong function
#defineFunction f7 {
  arguments: [x,y],
  math: sss(x)^2
};

// circular functions
#defineFunction f8 {
  arguments: [x,y],
  math: f9(x)^2
};
#defineFunction f9 {
  arguments: [x,y],
  math: f8(x)*f8(x)
};

// lost argument
#defineFunction f10 {
  arguments: [x],
  math: f8(x)*sin(y)
};

// no arguments
#defineFunction f11 {
  math: "f5()*pow(x)"
};

// lost argument in internal function
#defineFunction f12 {
  arguments: [x,y],
  math: "f5()*pow(x,y)"
};
*/

#defineUnit u1 {
  units: litre^2,
};

c1 @Compartment .= 2;
s1 @Species {compartment: c1} .= 100;
r1 @Reaction {actors: s1=} := k1 * f5(1.1, k1) * pow(1.1, 2) * c1;

k1 @Const = 0.1;

