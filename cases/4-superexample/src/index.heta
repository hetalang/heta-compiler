
pg2 @Page {content: this is content};

namespace mod1 begin
  block @Const begin
    k1 = 0.2;
    k2 = 0.03;
  end
  p1 @Record;
  p1 .= 1;
  p2 @Record;
  p2 := 1*2;
  k1 @Record .= 0.1;
  p3 @Record;
  p3 {boundary: true, assignments: {
    start_: 1
  }};
  p4 @Record;
  p4 .= 0;
  // p4 `= 3;
  p5 @Record;
  p5 := 1 * p6;
  p6 @Record;
  p6 .= 2 * p4;

  comp1 @Compartment { units: litre };
  comp1 .= 5;
  comp2 @Compartment { units: liter };
  comp2 := p1;

  sp1 @Species { compartment: comp1, isAmount: false };
  sp1 .= 0;

  r1 @Reaction { actors: sp1 =>, modifiers: [sp1] };
  r1 := p1 * sp1 * comp1;

  r2 @Process { actors: p3 + 2k1 => p4 };
  r2 := 1;

  r3 @Process { actors: => k1 };
  r3 := k2;

  p3[sw1]= 12.1;
  p3[sw2]= p3*p1 + 10;
  p4[sw2]= 0;
  p4[sw3]= 2;
end

mod1::sw3 @CondSwitcher {
  condition: p1
};

namespace mod1 begin
  sw1 @TimeSwitcher {
    start: 6
  };
  sw2 @TimeSwitcher {
    start: 12,
    period: 6,
    repeatCount: 3
  };
end

#export {space: mod1, filepath: mod1_sbml, format: SBML};
#export {space: mod1, filepath: mod1_simbio, format: Simbio};
#export {space: mod1, filepath: json, format: JSON};
#export {space: mod1, filepath: yaml, format: YAML};
#export {space: mod1, filepath: mod1_slv, format: SLV};
#export {space: mod1, filepath: mod1_mrg, format: Mrgsolve};
