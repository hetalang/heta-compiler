/*
  This case is based on 0-hello-world but with @Task
*/

#include {source: qsp-units.heta};

namespace mm begin
  block @Const begin
    Vmax = 0.1 {units: uM/minute}; // this is global constant available for any scoped equation
    Km = 2.5 {units: uM};
  end

  '''Note for the Default compartment'''
  default_comp @Compartment { title: Default compartment, units: L };
  default_comp .= 1;

  S @Species { title: substrate, compartment: default_comp, units: uM };
  P @Species { title: product,  compartment: default_comp, units: uM };
  ''' Transformation of __substrate__ to __product__ '''
  r1 @Reaction {
    title: Michaelis-Menten reaction,
    actors: S -> P,
    units: umole/minute
  };

  r1 := Vmax*S/(Km+S)*default_comp; // S is used here but assigned below
  S .= 10; // S should be initialialized after creation
  P .= 0;
end

// simulation tasks
mm::sim_task1 @SimpleTask {
  type: simulation,
  subtasks: [
    { saveat: [0, 50, 100, 200], output: [S, P] }
  ],
  tspan: [ 0, 120 ],
  reassign: { k1: 0 },
  solver: { dtmax: 12 }
};

#export { spaceFilter: mm, filepath: mm_sbml, format: SBML };
#export { spaceFilter: mm, filepath: full_json, format: JSON };
#export { spaceFilter: mm, filepath: full_yaml, format: YAML };
#export { spaceFilter: mm, filepath: mm_slv, format: SLV }; /* defaultTask: sim_task1 */
#export { spaceFilter: mm, filepath: mm_mrg, format: Mrgsolve };
